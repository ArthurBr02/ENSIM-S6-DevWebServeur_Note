openapi: 3.0.0
info:
  title: API ENSIM-S6-DevWebServeur
  version: 1.0.0
  description: API pour le projet de développement web serveur de l'ENSIM en S6.
servers:
  - url: http://localhost:3001/api/v1 # Remplacez par l'URL de votre serveur
paths:
  /user/register:
    post:
      summary: Créer un utilisateur
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                firstname:
                  type: string
                lastname:
                  type: string
                street:
                  type: string
                city:
                  type: string
                postalCode:
                  type: string
      responses:
        '200':
          description: Utilisateur créé avec succès
        '400':
          description: Données invalides
        '500':
          description: Erreur serveur
  /user/login:
    post:
      summary: Connecter un utilisateur
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Connexion réussie, retourne un token
        '401':
          description: Identifiants invalides
        '500':
          description: Erreur serveur
  /user/me:
    get:
      summary: Récupérer les informations de l'utilisateur connecté
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Informations de l'utilisateur
        '401':
          description: Non autorisé
        '500':
          description: Erreur serveur
  /ingredient:
    get:
      summary: Récupérer la liste des ingrédients
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: page
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Liste des ingrédients
        '401':
          description: Non autorisé
        '500':
          description: Erreur serveur
    post:
      summary: Créer un ingrédient
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                type:
                  type: string
                price:
                  type: number
                street:
                  type: string
                city:
                  type: string
                postalCode:
                  type: string
      responses:
        '200':
          description: Ingrédient créé avec succès
        '400':
          description: Données invalides
        '401':
          description: Non autorisé
        '500':
          description: Erreur serveur
  /ingredient/around:
    get:
      summary: Récupérer les ingrédients autour de l'utilisateur
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
      responses:
        '200':
          description: Liste des ingrédients
        '401':
          description: Non autorisé
        '500':
          description: Erreur serveur
  /rhum:
    get:
      summary: Récupérer la liste des rhums
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: pays
          schema:
            type: string
        - in: query
          name: volume
          schema:
            type: number
        - in: query
          name: degre
          schema:
            type: number
        - in: query
          name: distillerie
          schema:
            type: string
        - in: query
          name: categories
          schema:
            type: string
        - in: query
          name: embouteilleur
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: page
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Liste des rhums
        '401':
          description: Non autorisé
        '500':
          description: Erreur serveur
  /recette:
    get:
      summary: Récupérer la liste des recettes publiques
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: page
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Liste des recettes publiques
        '401':
          description: Non autorisé
        '500':
          description: Erreur serveur
    post:
      summary: Créer une recette
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                rhumId:
                  type: integer
                ingredientIds:
                  type: array
                  items:
                    type: integer
                name:
                  type: string
                instructions:
                  type: string
                isPrivate:
                  type: boolean
      responses:
        '200':
          description: Recette créée avec succès
        '400':
          description: Données invalides
        '401':
          description: Non autorisé
        '500':
          description: Erreur serveur
  /recette/me:
    get:
      summary: Récupérer les recettes de l'utilisateur
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: page
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Liste des recettes de l'utilisateur
        '401':
          description: Non autorisé
        '500':
          description: Erreur serveur
  /recette/{id}:
    put:
      summary: Modifier une recette
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                rhumId:
                  type: integer
                ingredientIds:
                  type: array
                  items:
                    type: integer
                name:
                  type: string
                instructions:
                  type: string
                isPrivate:
                  type: boolean
      responses:
        '200':
          description: Recette modifiée avec succès
        '400':
          description: Données invalides
        '401':
          description: Non autorisé
        '404':
          description: Recette non trouvée
        '500':
          description: Erreur serveur
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT